{"version":3,"sources":["BookEvent.js","logo.svg","EventList.js","Main.js","App.js","reducer/index.js","serviceWorker.js","index.js","actions/index.js"],"names":["Option","Select","Title","Typography","validEmailRegex","RegExp","validateForm","errors","valid","Object","keys","forEach","val","console","log","indexOf","index","charAt","length","checkCharAndSpace","validPhoneRegex","validations","attendeeName","email","phoneNumber","BookEvent","props","validateCWsp","value","test","validateEmail","validatePhone","componentDidMount","setState","eventId","JSON","parse","sessionStorage","getItem","event","showModal","visible","handleOk","e","handleCancel","handleSubmit","preventDefault","state","validForm","errorKeys","element","1","finalData","Date","toISOString","2","attendee","3","requestOptions","method","headers","body","stringify","fetch","config","url","then","response","json","data","handleSuccessOk","history","push","validateField","name","setFormValue","target","form","changeFormField","handleChangeSeats","eval","stateData","i","changeAttendeeName","cancel","successModalVisible","attendees","this","className","level","eventName","seatsAvailable","xs","sm","md","lg","xl","src","width","placeholder","onChange","prefix","suffix","title","style","color","class","defaultValue","slice","map","key","type","onClick","onOk","onCancel","status","subTitle","noOfSeats","React","Component","mapStateToProps","withRouter","connect","saveSelectedEvent","saveEvents","module","exports","Search","Input","EventList","createBrowserHistory","events","searchText","bookEvent","setItem","eventsData","item","bookings","fil","booking","search","getResults","flag","onSearch","marginBottom","padding","size","eventLogo","eventDate","disabled","counter","Main","exact","path","App","reducer","action","payload","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81862719.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { PageHeader } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nimport { Input, Tooltip } from \"antd\";\r\nimport { Button } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport { Card } from \"antd\";\r\nimport { Modal } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { saveSelectedEvent, saveEvents } from \"./actions\";\r\nimport config from './config/config.json';\r\n\r\nimport {\r\n  InfoCircleOutlined,\r\n  UserOutlined,\r\n  RedEnvelopeOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Result} from 'antd';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n);\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.keys(errors).forEach((val) => {\r\n    console.log(val);\r\n    if (val.indexOf(\"attendees\") > -1) {\r\n      let index =\r\n        val.charAt(val.length - 1)(errors[val + index] != \"\") &&\r\n        (valid = false);\r\n    } else {\r\n      errors[val] != \"\" && (valid = false);\r\n    }\r\n  });\r\n  return valid;\r\n};\r\n\r\nconst checkCharAndSpace = RegExp(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/);\r\nconst validPhoneRegex = RegExp(\r\n  /^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[789]\\d{9}|(\\d[ -]?){10}\\d$/\r\n);\r\n\r\nconst validations = {\r\n  attendeeName: [\"required\", \"charWsp\"],\r\n  email: [\"required\", \"email\"],\r\n  phoneNumber: [\"required\", \"tel\"],\r\n};\r\nclass BookEvent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      successModalVisible : false,\r\n      event:{},\r\n      eventId: \"\",\r\n      errors: {\r\n        attendees:[\r\n          \"\"\r\n        ]\r\n      },\r\n      attendees: [\r\n        {\r\n          name: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  validateCWsp = (value) => {\r\n    return checkCharAndSpace.test(value);\r\n  };\r\n\r\n  validateEmail = (value) => {\r\n    return validEmailRegex.test(value);\r\n  };\r\n\r\n  validatePhone = (value) => {\r\n    return validPhoneRegex.test(value);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      eventId: this.props.eventId\r\n        ? this.props.eventId\r\n        : JSON.parse(sessionStorage.getItem(\"event\"))[\"eventId\"],\r\n        event:JSON.parse(sessionStorage.getItem('event'))\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  \r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state)\r\n    let validForm = true;\r\n    let errorKeys=Object.keys(this.state.errors);\r\n    if(errorKeys.length){\r\n      errorKeys.forEach(element =>{\r\n        if(element!='attendees')\r\n        {\r\n          if(this.state.errors[element]){\r\n          validForm = false;\r\n          this.setState({element:'Please enter '+element})\r\n         } \r\n        }\r\n      })\r\n    }\r\n\r\n    console.log({1:validForm})\r\n    let finalData = this.state;\r\n    \r\n    finalData[\"createdAt\"] = new Date().toISOString();\r\n    finalData[\"noOfSeats\"] = finalData[\"attendees\"].length;\r\n    let elementsToCheck = [\"eventId\",\"email\",\"phoneNumber\",\"noOfSeats\"];\r\n    elementsToCheck.forEach(element=>{\r\n      if(!finalData[element] || finalData[element]==''){\r\n        validForm  = false;\r\n        finalData['errors'][element]='Please enter '+element;\r\n        this.setState(finalData);\r\n      }\r\n    })\r\n\r\n    console.log({2:validForm})\r\n\r\n    finalData['attendees'].forEach((attendee,index)=>{\r\n      if(attendee['name']=='' || !attendee['name']==''){\r\n        finalData['errors']['attendees'][index]  = 'Please enter name';\r\n        validForm = false;\r\n        this.setState(finalData);\r\n      }\r\n    })\r\n\r\n    console.log({3:validForm})\r\n\r\n    console.log(finalData)\r\n    \r\n    if(!validForm){\r\n      this.showModal();\r\n      return;\r\n    }\r\n  \r\n    delete finalData[\"errors\"];\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(finalData),\r\n    };\r\n    fetch(config.url+\"/booking/createBooking\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({'successModalVisible':true});\r\n        \r\n      });\r\n  };\r\n\r\n  handleSuccessOk=()=>{\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  validateField = (name, value) => {\r\n    let state = this.state;\r\n    state[\"errors\"][name] = \"\";\r\n\r\n    if (value) {\r\n      if (validations[name] && validations[name].indexOf(\"charWsp\") > -1) {\r\n        if (!this.validateCWsp(value)) {\r\n          state[\"errors\"][name] = name + \" is invalid\";\r\n        }\r\n      }\r\n      if (validations[name] && validations[name].indexOf(\"email\") > -1) {\r\n        if (!this.validateEmail(value)) {\r\n          state[\"errors\"][name] = name + \" is invalid\";\r\n        }\r\n      }\r\n      if (validations[name] && validations[name].indexOf(\"tel\") > -1) {\r\n        if (!this.validatePhone(value)) {\r\n          state[\"errors\"][name] = name + \" is invalid\";\r\n        }\r\n      }\r\n    } else {\r\n      state[\"errors\"][name] = name + \" is required\";\r\n    }\r\n\r\n    console.log(state);\r\n    this.setState(state);\r\n  };\r\n\r\n  setFormValue = (e) => {\r\n    console.log(e.target.name);\r\n    let form = this.state;\r\n    form[e.target.name] = e.target.value;\r\n    this.setState(form);\r\n  };\r\n\r\n  changeFormField = (e) => {\r\n    this.setFormValue(e);\r\n    this.validateField(e.target.name, e.target.value);\r\n  };\r\n\r\n  handleChangeSeats = (e) => {\r\n    e = eval(e);\r\n    let stateData = this.state;\r\n    stateData[\"attendees\"].length = 1;\r\n    if (e > 1) {\r\n      for (let i = 0; i < e - 1; i++) {\r\n        stateData[\"attendees\"].push({ name: \"\" });\r\n        stateData['errors']['attendees'].push('');\r\n      }\r\n    }\r\n    e = {\r\n      target: {\r\n        name: \"seats\",\r\n        value: e,\r\n      },\r\n    };\r\n    this.setFormValue(e);\r\n\r\n    this.setState(stateData);\r\n  };\r\n\r\n  changeAttendeeName = (e, index) => {\r\n    let stateData = this.state;\r\n    stateData[\"attendees\"][index] = e.target.value;\r\n    stateData[\"errors\"][\"attendees\" + index] = \"\";\r\n    if (e.target.value && !this.validateCWsp(e.target.value)) {\r\n      stateData[\"errors\"][\"attendees\" + index] =\r\n        \"Only letters and spaces are allowed\";\r\n    } else if (!e.target.value) {\r\n      stateData[\"errors\"][\"attendees\"][index] = \"Please enter your name\";\r\n    }\r\n    this.setState(stateData);\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"page\">\r\n        <div className=\"header\">\r\n          <Title level={1}>{this.state.event.eventName}</Title>\r\n          <Title level={4}>Number of Seats Available : {this.state.event.seatsAvailable}</Title>\r\n        </div>\r\n        <div className={\"event-card\"}>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={8} lg={8} xl={8} className={\"left-panel\"}>\r\n              <Card className=\"event-image-card\">\r\n                <img\r\n                  className=\"round-img\"\r\n                  src={\r\n                    \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTzedXLywa44Gen-fmQKCIJc9uDB2nGlMLG3Q&usqp=CAU\"\r\n                  }\r\n                  width=\"100%\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              xs={24}\r\n              sm={24}\r\n              md={16}\r\n              lg={16}\r\n              xl={16}\r\n              className={\"right-panel\"}\r\n            >\r\n              <div className={\"full-width\"}>\r\n                <div className={\"form-group\"}>\r\n                  <label>Name:</label>\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Example\"\r\n                      name=\"attendeeName\"\r\n                      onChange={(e) => {\r\n                        this.changeAttendeeName(e, 0);\r\n                      }}\r\n                      prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                      suffix={\r\n                        <Tooltip title=\"Enter your name\">\r\n                          <InfoCircleOutlined\r\n                            style={{ color: \"rgba(0,0,0,.45)\" }}\r\n                          />\r\n                        </Tooltip>\r\n                      }\r\n                    />\r\n                    {\r\n                      this.state.errors['attendees'][0] && \r\n                      <p class=\"error-text\">Please enter name</p>\r\n                    }\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div className={\"form-group\"}>\r\n                  <label>Email:</label>\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"example@example.com\"\r\n                      name=\"email\"\r\n                      onChange={(e) => this.changeFormField(e)}\r\n                      prefix={\r\n                        <RedEnvelopeOutlined className=\"site-form-item-icon\" />\r\n                      }\r\n                      suffix={\r\n                        <Tooltip title=\"Enter your email address\">\r\n                          <InfoCircleOutlined\r\n                            style={{ color: \"rgba(0,0,0,.45)\" }}\r\n                          />\r\n                        </Tooltip>\r\n                      }\r\n                    />\r\n                   \r\n                    {\r\n                      this.state.errors['email'] && \r\n                      <p class=\"error-text\">Please enter valid email address</p>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className={\"form-group\"}>\r\n                  <label>Phone No:</label>\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"9xxxxxxxx\"\r\n                      name=\"phoneNumber\"\r\n                      onChange={(e) => this.changeFormField(e)}\r\n                      prefix={<PhoneOutlined className=\"site-form-item-icon\" />}\r\n                      suffix={\r\n                        <Tooltip title=\"Enter your phone number\">\r\n                          <InfoCircleOutlined\r\n                            style={{ color: \"rgba(0,0,0,.45)\" }}\r\n                          />\r\n                        </Tooltip>\r\n                      }\r\n                    />\r\n                     {\r\n                      this.state.errors['phoneNumber'] && \r\n                      <p class=\"error-text\">Please enter valid phone number</p>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className={\"form-group\"}>\r\n                  <label>Number of seats:</label>\r\n                  <div>\r\n                    <Select\r\n                      defaultValue=\"1\"\r\n                      style={{ width: \"100%\" }}\r\n                      onChange={this.handleChangeSeats}\r\n                    >\r\n                      <Option value=\"1\">1 Seat</Option>\r\n                      <Option value=\"2\">2 Seats</Option>\r\n                      <Option value=\"3\">3 Seats</Option>\r\n                      <Option value=\"4\">4 Seats</Option>\r\n                      <Option value=\"5\">5 Seats</Option>\r\n                      <Option value=\"6\">6 Seats</Option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n               \r\n                {\r\n                  this.state.attendees.length > this.state.event.seatsAvailable && \r\n                  <p className=\"error-text\">Number of seats selected is more than available seats</p>\r\n                }\r\n\r\n                {\r\n                !(this.state.attendees.length > this.state.event.seatsAvailable) &&\r\n                this.state.attendees.slice(1).map((attendee, index) => {\r\n                  return (\r\n                    <div className={\"form-group\"} key={index}>\r\n                      <label>Name of Attendee {index + 2}:</label>\r\n                      <div>\r\n                        <Input\r\n                          placeholder=\"Example Name\"\r\n                          prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          onChange={(e) => {\r\n                            this.changeAttendeeName(e, index + 1);\r\n                          }}\r\n                          suffix={\r\n                            <Tooltip title=\"Enter your other attendee name\">\r\n                              <InfoCircleOutlined\r\n                                style={{ color: \"rgba(0,0,0,.45)\" }}\r\n                              />\r\n                            </Tooltip>\r\n                          }\r\n                        />\r\n                         {\r\n                      this.state.errors['attendees'][index+1] && \r\n                      <p class=\"error-text\">Please enter name</p>\r\n                    }\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className={\"form-group flex-right button-panel\"}>\r\n                  <Button type=\"danger\" onClick={this.cancel}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button type=\"primary\" onClick={(e) => this.handleSubmit(e)}>\r\n                    Book Now\r\n                  </Button>\r\n                 \r\n                    <Modal\r\n                      title=\"Error\"\r\n                      visible={this.state.visible}\r\n                      onOk={this.handleOk}\r\n                      onCancel={this.handleCancel}\r\n                    >\r\n                      <Result\r\n                status=\"error\"\r\n                title=\"Submission Failed\"\r\n                subTitle=\"Please check given inputs and modify the following information before resubmitting.\"\r\n              ></Result>\r\n                    </Modal>\r\n                    \r\n                    <Modal\r\n                      title=\"Success\"\r\n                      visible={this.state.successModalVisible}\r\n                      onOk={this.handleSuccessOk}\r\n                      onCancel={this.handleSuccessOk}\r\n                    >\r\n                      <Result\r\n    status=\"success\"\r\n    title=\"Successfully Booked Seats!\"\r\n    subTitle={\"Your seats are booked with \"+this.state.noOfSeats+\" seats\"}\r\n    \r\n  />\r\n                    </Modal>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    eventId: state.eventId,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { saveSelectedEvent, saveEvents })(BookEvent)\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { saveSelectedEvent, saveEvents } from \"./actions\";\r\nimport eventsData from \"./data-source/events.json\";\r\nimport { Input } from \"antd\";\r\nimport { Card } from \"antd\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Button } from \"antd\";\r\nimport config from './config/config.json';\r\n\r\nconst { Search } = Input;\r\n\r\nconst history = createBrowserHistory();\r\nclass EventList extends React.Component {\r\n  state = {\r\n    events: [],\r\n    searchText:\"\"\r\n  };\r\n\r\n  bookEvent = (event) => {\r\n    sessionStorage.setItem(\"event\", JSON.stringify(event));\r\n    this.props.saveSelectedEvent({ eventId: event.eventId });\r\n    this.props.history.push(\"/book-event/\" + event.eventId);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(config.url+\"/booking/getBookings\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        data = data.data;\r\n        let events = eventsData;\r\n        events.forEach((item) => {\r\n          item.bookings = 0;\r\n          let filteredData = data.map((fil) => {\r\n            if (fil.eventId == item.eventId) {\r\n              return fil;\r\n            }\r\n          });\r\n          filteredData.forEach((booking) => {\r\n            if (booking) item.bookings += booking.noOfSeats;\r\n          });\r\n          item.seatsAvailable -= item.bookings;\r\n        });\r\n        this.setState({ events });\r\n      });\r\n  };\r\n\r\n  search = (value) =>{\r\n    this.setState({searchText:value});\r\n  }\r\n\r\n  getResults=()=>{\r\n      let flag=false;\r\n    this.state.events.forEach((event, index) => {\r\n        if(!this.state.searchText || this.state.searchText=='' || (this.state.searchText && event.eventName.indexOf(this.state.searchText)>-1))\r\n        {\r\n            flag=true ;\r\n            return\r\n        }\r\n    });\r\n    console.log({flag})\r\n        return flag;\r\n                            \r\n  }\r\n\r\n  render() {\r\n    const { saveSelectedEvent, saveEvents } = this.props;\r\n    return (\r\n      <div className=\"page text-align-center\">\r\n        <div className=\"header\">\r\n          <br />\r\n          <Search\r\n            placeholder=\"SEARCH EVENTS\"\r\n            onSearch={(value) => this.search(value)}\r\n            style={{ width: \"50%\", marginBottom: 20 }}\r\n          />\r\n          <br />\r\n        </div>\r\n        <br />\r\n\r\n        <div>\r\n            {\r\n                !this.getResults() && \r\n                <h1 class=\"text-align-center\">No results found</h1>\r\n            }\r\n            \r\n          <Row>\r\n            {this.state.events.map((event, index) => {\r\n                \r\n              return (\r\n                    (!this.state.searchText || this.state.searchText=='' || (this.state.searchText && event.eventName.indexOf(this.state.searchText)>-1)) && \r\n                     // ((this.state.searchText && this.state.searchText.includes(event.eventName)) || !this.state.searchText) && \r\n                      <>\r\n                      \r\n                       \r\n                      <Col\r\n                        xs={24}\r\n                        sm={24}\r\n                        md={8}\r\n                        lg={6}\r\n                        xl={6}\r\n                        style={{ padding: \"10px\" }}\r\n                      >\r\n                        <Card\r\n                          size=\"small\"\r\n                          title={event.eventName}\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          <Row>\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\r\n                              <img src={event.eventLogo} className=\"full-width\" />\r\n                            </Col>\r\n                            <Col\r\n                              xs={24}\r\n                              sm={24}\r\n                              md={16}\r\n                              lg={16}\r\n                              xl={16}\r\n                              className=\"event-content\"\r\n                            >\r\n                              <p>{event.eventDate}</p>\r\n                              <p>Seats Available : {event.seatsAvailable}</p>\r\n                              {event.seatsAvailable == 0 && (\r\n                                <Button type=\"primary\" disabled>\r\n                                  Sold Out\r\n                                </Button>\r\n                              )}\r\n                              {event.seatsAvailable != 0 && (\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  onClick={(e) => this.bookEvent(event)}\r\n                                >\r\n                                  Book Now\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </>\r\n                  \r\n                  \r\n              );\r\n            })}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    counter: state.counter,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { saveSelectedEvent, saveEvents })(EventList)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport EventList from './EventList';\r\nimport BookEvent from './BookEvent';\r\n\r\nclass Main extends React.Component {\r\n\r\n    render(){\r\n        return <Router>\r\n          <Switch>\r\n        <Route exact path=\"/event-list\">\r\n          <EventList/>\r\n        </Route>\r\n        <Route exact path=\"/book-event/:id\">\r\n          <BookEvent />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <EventList />\r\n        </Route>\r\n      </Switch>\r\n      </Router> \r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './Main';\nimport './App.scss';\n\nfunction App() {\n  return (\n   <div>\n     <Main/>\n   </div>\n  );\n}\n\nexport default App;\n","const reducer = (state = {}, action) => {\r\n  console.log(action.payload)\r\n  switch (action.type) {\r\n    case 'events' :\r\n      return {...state,...action.payload}\r\n    case 'selectedEvent' :\r\n      return {...state,...action.payload}\r\n    default: return state\r\n  }\r\n}\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport reducer from './reducer/index'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  reducer\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const saveSelectedEvent = payload=>({ type: 'selectedEvent', payload })\r\n\r\nexport const saveEvents = payload=>({ type: 'events', payload })\r\n"],"sourceRoot":""}